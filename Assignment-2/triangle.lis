     1                                  ;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  *
     2                                  ;version 3 as published by the Free Software Foundation.                                                                    *
     3                                  ;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied         *
     4                                  ;warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.     *
     5                                  ;A copy of the GNU General Public License v3 is available here:  <https://www.gnu.org/licenses/>.                           *
     6                                  
     7                                  ;Author info
     8                                  ;   Name: Aaron Cope
     9                                  ;   Email: apc42190@csu.fullerton.edu
    10                                  ;
    11                                  ;Program info
    12                                  ;   Name: Float I/O
    13                                  ;   Programming Language: X86_64 and C
    14                                  ;   Date Written: August 31, 2021
    15                                  ;
    16                                  ;Translator information
    17                                  ;  Linux: nasm -f elf64 -l triangle.lis -o triangle.o triangle.asm
    18                                  
    19                                  
    20                                  extern strlen
    21                                  extern stdin
    22                                  extern scanf
    23                                  extern fgets
    24                                  extern printf
    25                                  extern strtod
    26                                  extern sqrt
    27                                  
    28                                  
    29                                  global triangle
    30                                  
    31                                  ;Defining the max length of user inputs
    32                                  max_name_size equ 20
    33                                  max_title_size equ 10
    34                                  max_side_size equ 6
    35                                  
    36                                  
    37                                  section .data
    38                                  
    39                                      ;Creating the arrays to hold user prompts and program responses
    40 00000000 506C6561736520656E-         promt_name db "Please enter your last name (20 byte limit): ", 0
    40 00000009 74657220796F757220-
    40 00000012 6C617374206E616D65-
    40 0000001B 202832302062797465-
    40 00000024 206C696D6974293A20-
    40 0000002D 00                 
    41 0000002E 506C6561736520656E-         prompt_title db "Please enter a title (Mr, Ms, Mrs, Master, etc): ", 0
    41 00000037 746572206120746974-
    41 00000040 6C6520284D722C204D-
    41 00000049 732C204D72732C204D-
    41 00000052 61737465722C206574-
    41 0000005B 63293A2000         
    42 00000060 506C6561736520656E-         prompt_sides db "Please enter the sides of your triangle separated by an enter (use 2 decimals): ", 0
    42 00000069 746572207468652073-
    42 00000072 69646573206F662079-
    42 0000007B 6F757220747269616E-
    42 00000084 676C65207365706172-
    42 0000008D 617465642062792061-
    42 00000096 6E20656E7465722028-
    42 0000009F 757365203220646563-
    42 000000A8 696D616C73293A2000 
    43 000000B1 546865206172656120-         print_area db "The area of your triangle is ", 0
    43 000000BA 6F6620796F75722074-
    43 000000C3 7269616E676C652069-
    43 000000CC 732000             
    44 000000CF 207371756172652075-         square_units db " square units.", 10
    44 000000D8 6E6974732E0A       
    45 000000DE 546865206C656E6774-         print_len db "The length of the hypotenuse is ", 0
    45 000000E7 68206F662074686520-
    45 000000F0 6879706F74656E7573-
    45 000000F9 652069732000       
    46 000000FF 20756E6974732E0A            len db " units.", 10
    47 00000107 506C6561736520656E-         conclude db "Please enjoy your triangles ", 0
    47 00000110 6A6F7920796F757220-
    47 00000119 747269616E676C6573-
    47 00000122 2000               
    48 00000124 257300                      string_format db "%s", 0
    49 00000127 256C6600                    float_format db "%lf", 0
    50                                  
    51                                  
    52                                  section .bss
    53                                  
    54                                      ;reserve space for user responses
    55 00000000 <res 00000014>              name resb max_name_size
    56 00000014 <res 00000014>              title resb max_name_size
    57 00000028 <res 00000006>              side_a resb max_side_size
    58 0000002E <res 00000006>              side_b resb max_side_size
    59                                  
    60                                  
    61                                  section .text
    62                                  triangle:
    63                                  
    64                                      ;prolog: Backing up general purpose registers
    65 00000000 55                          push rbp
    66 00000001 4889E5                      mov rbp, rsp
    67 00000004 53                          push rbx
    68 00000005 51                          push rcx
    69 00000006 52                          push rdx
    70 00000007 57                          push rdi
    71 00000008 56                          push rsi
    72 00000009 4150                        push r8
    73 0000000B 4151                        push r9
    74 0000000D 4152                        push r10
    75 0000000F 4153                        push r11
    76 00000011 4154                        push r12
    77 00000013 4155                        push r13
    78 00000015 4156                        push r14
    79 00000017 4157                        push r15
    80 00000019 9C                          pushf
    81                                  
    82                                  
    83 0000001A 48BF-                       mov rdi, string_format          ;pass string_format to printf
    83 0000001C [2401000000000000] 
    84 00000024 48BE-                       mov rsi, promt_name             ;ask user for last name
    84 00000026 [0000000000000000] 
    85 0000002E E8(00000000)                call printf  
    86                                  
    87 00000033 48BF-                       mov rdi, name                   ;retrieve user input and store in "name" array
    87 00000035 [0000000000000000] 
    88 0000003D BE14000000                  mov rsi, max_name_size          ;max number of characters
    89 00000042 488B1425[00000000]          mov rdx, [stdin]                ;pass standard input to fgets
    90 0000004A E8(00000000)                call fgets
    91                                  
    92 0000004F 48BF-                       mov rdi, string_format          
    92 00000051 [2401000000000000] 
    93 00000059 48BE-                       mov rsi, prompt_title           ;ask user for title
    93 0000005B [2E00000000000000] 
    94 00000063 E8(00000000)                call printf
    95                                  
    96 00000068 48BF-                       mov rdi, title                  ;retrieve user input and store in "title" array
    96 0000006A [1400000000000000] 
    97 00000072 BE0A000000                  mov rsi, max_title_size         ;max number of title characters
    98 00000077 488B1425[00000000]          mov rdx, [stdin]                ;pass standard input to fgets
    99 0000007F E8(00000000)                call fgets
   100                                  
   101 00000084 48BF-                       mov rdi, string_format          ;string format for argument 1 of printf
   101 00000086 [2401000000000000] 
   102 0000008E 48BE-                       mov rsi, prompt_sides           ;prompt user for sides of triangle
   102 00000090 [6000000000000000] 
   103 00000098 E8(00000000)                call printf
   104                                  
   105 0000009D 6A00                        push qword 0
   106 0000009F B800000000                  mov qword rax, 0
   107 000000A4 48BF-                       mov rdi, float_format
   107 000000A6 [2701000000000000] 
   108 000000AE 4889E6                      mov rsi, rsp
   109 000000B1 E8(00000000)                call scanf
   110 000000B6 F20F100424                  movsd xmm0, [rsp]
   111 000000BB 58                          pop rax
   112                                      
   113 000000BC B801000000                  mov rax, 1
   114 000000C1 50                          push rax
   115 000000C2 F20F100424                  movsd xmm0, [rsp]
   116 000000C7 58                          pop rax 
   117                                  
   118                                  
   119                                      ;epilog: returns stack to state prior to the assembly fuction
   120 000000C8 9D                          popf
   121 000000C9 415F                        pop r15
   122 000000CB 415E                        pop r14
   123 000000CD 415D                        pop r13
   124 000000CF 415C                        pop r12
   125 000000D1 415B                        pop r11
   126 000000D3 415A                        pop r10
   127 000000D5 4159                        pop r9
   128 000000D7 4158                        pop r8
   129 000000D9 5E                          pop rsi
   130 000000DA 5F                          pop rdi
   131 000000DB 5A                          pop rdx
   132 000000DC 59                          pop rcx
   133 000000DD 5B                          pop rbx
   134 000000DE 5D                          pop rbp
   135                                  
   136                                      ;end of assembly function
   137 000000DF C3                          ret
